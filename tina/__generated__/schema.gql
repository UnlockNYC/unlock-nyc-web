# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  page(relativePath: String): Page!
  pageConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PageFilter): PageConnection!
  bio(relativePath: String): Bio!
  bioConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: BioFilter): BioConnection!
  faq(relativePath: String): Faq!
  faqConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: FaqFilter): FaqConnection!
  article(relativePath: String): Article!
  articleConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ArticleFilter): ArticleConnection!
  report(relativePath: String): Report!
  reportConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ReportFilter): ReportConnection!
  press(relativePath: String): Press!
  pressConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: PressFilter): PressConnection!
  release(relativePath: String): Release!
  releaseConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: ReleaseFilter): ReleaseConnection!
}

input DocumentFilter {
  page: PageFilter
  bio: BioFilter
  faq: FaqFilter
  article: ArticleFilter
  report: ReportFilter
  press: PressFilter
  release: ReleaseFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = PageIndex | PageAbout | PageRightsrecorder | PageAdvocateportal | PageDatapage | PageVoucherholders | PageCommunityorganizers | PageHousingspecialists | PageFunding | PagePolicy | Bio | Faq | Article | Report | Press | Release | Folder

type PageIndexBlocksListButtonList {
  buttonText: String
  buttonLink: String
}

type PageIndexBlocksList {
  title: String
  text: String
  image: String
  alt: String
  button: String
  buttonList: [PageIndexBlocksListButtonList]
}

type PageIndex implements Node & Document {
  title: String!
  bannerTitle: String
  bannerText: String
  blocksList: [PageIndexBlocksList]
  latestBanner: String
  latestActionText: String
  latestActionImage: String
  latestActionVideo: String
  latestActionButton: String
  latestActionLink: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageAbout implements Node & Document {
  title: String!
  bannerTitle: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageRightsrecorderIconBlocksList {
  title: String
  text: String
  image: String
}

type PageRightsrecorder implements Node & Document {
  title: String!
  bannerTitle: String
  bannerText: String
  iconBlocksList: [PageRightsrecorderIconBlocksList]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageAdvocateportalIconBlocksList {
  title: String
  text: String
  image: String
  button: String
  buttonText: String
}

type PageAdvocateportal implements Node & Document {
  title: String!
  bannerTitle: String
  bannerText: String
  iconBlocksList: [PageAdvocateportalIconBlocksList]
  yellowBannerTitle: String
  yellowBannerText: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageDatapageBlocksListButtonList {
  buttonText: String
}

type PageDatapageBlocksList {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageDatapageBlocksListButtonList]
}

type PageDatapage implements Node & Document {
  title: String!
  bannerTitle: String
  bannerText: String
  blocksList: [PageDatapageBlocksList]
  orangeBannerTitle: String
  orangeBannerText: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageVoucherholdersBlocksListButtonList {
  buttonText: String
  buttonLink: String
}

type PageVoucherholdersBlocksList {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageVoucherholdersBlocksListButtonList]
}

type PageVoucherholdersLinksList {
  title: String
  text: String
  image: String
  button: String
  buttonText: String
  buttonLink: String
}

type PageVoucherholders implements Node & Document {
  title: String!
  bannerTitle: String
  bannerText: String
  blocksList: [PageVoucherholdersBlocksList]
  keyImage1: String
  keyImage2: String
  keyImage3: String
  keyImage4: String
  quote: String
  quoteAuthor: String
  authorTitle: String
  linksList: [PageVoucherholdersLinksList]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageCommunityorganizersBlocksListButtonList {
  buttonText: String
  buttonLink: String
}

type PageCommunityorganizersBlocksList {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageCommunityorganizersBlocksListButtonList]
}

type PageCommunityorganizers implements Node & Document {
  title: String!
  bannerTitle: String
  bannerSubtitle: String
  bannerText: String
  blocksList: [PageCommunityorganizersBlocksList]
  orangeBannerTitle: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageHousingspecialistsLinksListButtonList {
  buttonText: String
  buttonLink: String
}

type PageHousingspecialistsLinksList {
  title: String
  content: JSON
  image: String
  button: String
  buttonList: [PageHousingspecialistsLinksListButtonList]
}

type PageHousingspecialistsPartnersList {
  name: String!
  logo: String
  link: String
}

type PageHousingspecialists implements Node & Document {
  title: String!
  bannerTitle: String
  bannerSubtitle: String
  quote: String
  quoteAuthor: String
  quoteTitle: String
  quoteImg: String
  linksList: [PageHousingspecialistsLinksList]
  partnersList: [PageHousingspecialistsPartnersList]
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PageFundingBlocksListButtonList {
  buttonText: String
  buttonLink: String
}

type PageFundingBlocksList {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageFundingBlocksListButtonList]
}

type PageFundingFundersList {
  name: String!
  logo: String
  link: String
}

type PageFunding implements Node & Document {
  title: String!
  bannerTitle: String
  bannerText: String
  blocksList: [PageFundingBlocksList]
  fundersList: [PageFundingFundersList]
  orangeBannerTitle: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

type PagePolicy implements Node & Document {
  title: String!
  effective: String
  revised: String
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

union Page = PageIndex | PageAbout | PageRightsrecorder | PageAdvocateportal | PageDatapage | PageVoucherholders | PageCommunityorganizers | PageHousingspecialists | PageFunding | PagePolicy

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input PageIndexBlocksListButtonListFilter {
  buttonText: StringFilter
  buttonLink: StringFilter
}

input PageIndexBlocksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
  alt: StringFilter
  button: StringFilter
  buttonList: PageIndexBlocksListButtonListFilter
}

input PageIndexFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerText: StringFilter
  blocksList: PageIndexBlocksListFilter
  latestBanner: StringFilter
  latestActionText: StringFilter
  latestActionImage: ImageFilter
  latestActionVideo: StringFilter
  latestActionButton: StringFilter
  latestActionLink: StringFilter
}

input PageAboutFilter {
  title: StringFilter
  bannerTitle: StringFilter
}

input PageRightsrecorderIconBlocksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
}

input PageRightsrecorderFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerText: StringFilter
  iconBlocksList: PageRightsrecorderIconBlocksListFilter
}

input PageAdvocateportalIconBlocksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
  button: StringFilter
  buttonText: StringFilter
}

input PageAdvocateportalFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerText: StringFilter
  iconBlocksList: PageAdvocateportalIconBlocksListFilter
  yellowBannerTitle: StringFilter
  yellowBannerText: StringFilter
}

input PageDatapageBlocksListButtonListFilter {
  buttonText: StringFilter
}

input PageDatapageBlocksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
  button: StringFilter
  buttonList: PageDatapageBlocksListButtonListFilter
}

input PageDatapageFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerText: StringFilter
  blocksList: PageDatapageBlocksListFilter
  orangeBannerTitle: StringFilter
  orangeBannerText: StringFilter
}

input PageVoucherholdersBlocksListButtonListFilter {
  buttonText: StringFilter
  buttonLink: StringFilter
}

input PageVoucherholdersBlocksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
  button: StringFilter
  buttonList: PageVoucherholdersBlocksListButtonListFilter
}

input PageVoucherholdersLinksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
  button: StringFilter
  buttonText: StringFilter
  buttonLink: StringFilter
}

input PageVoucherholdersFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerText: StringFilter
  blocksList: PageVoucherholdersBlocksListFilter
  keyImage1: ImageFilter
  keyImage2: ImageFilter
  keyImage3: ImageFilter
  keyImage4: ImageFilter
  quote: StringFilter
  quoteAuthor: StringFilter
  authorTitle: StringFilter
  linksList: PageVoucherholdersLinksListFilter
}

input PageCommunityorganizersBlocksListButtonListFilter {
  buttonText: StringFilter
  buttonLink: StringFilter
}

input PageCommunityorganizersBlocksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
  button: StringFilter
  buttonList: PageCommunityorganizersBlocksListButtonListFilter
}

input PageCommunityorganizersFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerSubtitle: StringFilter
  bannerText: StringFilter
  blocksList: PageCommunityorganizersBlocksListFilter
  orangeBannerTitle: StringFilter
}

input RichTextFilter {
  startsWith: String
  eq: String
  exists: Boolean
}

input PageHousingspecialistsLinksListButtonListFilter {
  buttonText: StringFilter
  buttonLink: StringFilter
}

input PageHousingspecialistsLinksListFilter {
  title: StringFilter
  content: RichTextFilter
  image: ImageFilter
  button: StringFilter
  buttonList: PageHousingspecialistsLinksListButtonListFilter
}

input PageHousingspecialistsPartnersListFilter {
  name: StringFilter
  logo: ImageFilter
  link: StringFilter
}

input PageHousingspecialistsFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerSubtitle: StringFilter
  quote: StringFilter
  quoteAuthor: StringFilter
  quoteTitle: StringFilter
  quoteImg: ImageFilter
  linksList: PageHousingspecialistsLinksListFilter
  partnersList: PageHousingspecialistsPartnersListFilter
}

input PageFundingBlocksListButtonListFilter {
  buttonText: StringFilter
  buttonLink: StringFilter
}

input PageFundingBlocksListFilter {
  title: StringFilter
  text: StringFilter
  image: ImageFilter
  button: StringFilter
  buttonList: PageFundingBlocksListButtonListFilter
}

input PageFundingFundersListFilter {
  name: StringFilter
  logo: ImageFilter
  link: StringFilter
}

input PageFundingFilter {
  title: StringFilter
  bannerTitle: StringFilter
  bannerText: StringFilter
  blocksList: PageFundingBlocksListFilter
  fundersList: PageFundingFundersListFilter
  orangeBannerTitle: StringFilter
}

input PagePolicyFilter {
  title: StringFilter
  effective: StringFilter
  revised: StringFilter
  body: RichTextFilter
}

input PageFilter {
  index: PageIndexFilter
  about: PageAboutFilter
  rightsrecorder: PageRightsrecorderFilter
  advocateportal: PageAdvocateportalFilter
  datapage: PageDatapageFilter
  voucherholders: PageVoucherholdersFilter
  communityorganizers: PageCommunityorganizersFilter
  housingspecialists: PageHousingspecialistsFilter
  funding: PageFundingFilter
  policy: PagePolicyFilter
}

type PageConnectionEdges {
  cursor: String!
  node: Page
}

type PageConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PageConnectionEdges]
}

type Bio implements Node & Document {
  name: String!
  title: String
  tags: [String]
  image: String
  order: Float
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input NumberFilter {
  lt: Float
  lte: Float
  gte: Float
  gt: Float
  eq: Float
  exists: Boolean
  in: [Float]
}

input BioFilter {
  name: StringFilter
  title: StringFilter
  tags: StringFilter
  image: ImageFilter
  order: NumberFilter
}

type BioConnectionEdges {
  cursor: String!
  node: Bio
}

type BioConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [BioConnectionEdges]
}

type Faq implements Node & Document {
  question: String!
  answer: JSON
  tags: [String]
  order: Float
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input FaqFilter {
  question: StringFilter
  answer: RichTextFilter
  tags: StringFilter
  order: NumberFilter
}

type FaqConnectionEdges {
  cursor: String!
  node: Faq
}

type FaqConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [FaqConnectionEdges]
}

type Article implements Node & Document {
  title: String!
  author: String
  excerpt: String
  image: String
  tags: [String]
  keywords: [String]
  body: JSON
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ArticleFilter {
  title: StringFilter
  author: StringFilter
  excerpt: StringFilter
  image: ImageFilter
  tags: StringFilter
  keywords: StringFilter
  body: RichTextFilter
}

type ArticleConnectionEdges {
  cursor: String!
  node: Article
}

type ArticleConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ArticleConnectionEdges]
}

type Report implements Node & Document {
  reportTitle: String!
  reportSummaryTop: String
  reportSummary: String
  reportPDF: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ReportFilter {
  reportTitle: StringFilter
  reportSummaryTop: StringFilter
  reportSummary: StringFilter
  reportPDF: ImageFilter
}

type ReportConnectionEdges {
  cursor: String!
  node: Report
}

type ReportConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ReportConnectionEdges]
}

type Press implements Node & Document {
  title: String!
  excerpt: String
  image: String
  keywords: [String]
  link: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input PressFilter {
  title: StringFilter
  excerpt: StringFilter
  image: ImageFilter
  keywords: StringFilter
  link: StringFilter
}

type PressConnectionEdges {
  cursor: String!
  node: Press
}

type PressConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [PressConnectionEdges]
}

type Release implements Node & Document {
  title: String!
  excerpt: String
  keywords: [String]
  link: String
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input ReleaseFilter {
  title: StringFilter
  excerpt: StringFilter
  keywords: StringFilter
  link: StringFilter
}

type ReleaseConnectionEdges {
  cursor: String!
  node: Release
}

type ReleaseConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [ReleaseConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  updatePage(relativePath: String!, params: PageMutation!): Page!
  createPage(relativePath: String!, params: PageMutation!): Page!
  updateBio(relativePath: String!, params: BioMutation!): Bio!
  createBio(relativePath: String!, params: BioMutation!): Bio!
  updateFaq(relativePath: String!, params: FaqMutation!): Faq!
  createFaq(relativePath: String!, params: FaqMutation!): Faq!
  updateArticle(relativePath: String!, params: ArticleMutation!): Article!
  createArticle(relativePath: String!, params: ArticleMutation!): Article!
  updateReport(relativePath: String!, params: ReportMutation!): Report!
  createReport(relativePath: String!, params: ReportMutation!): Report!
  updatePress(relativePath: String!, params: PressMutation!): Press!
  createPress(relativePath: String!, params: PressMutation!): Press!
  updateRelease(relativePath: String!, params: ReleaseMutation!): Release!
  createRelease(relativePath: String!, params: ReleaseMutation!): Release!
}

input DocumentUpdateMutation {
  page: PageMutation
  bio: BioMutation
  faq: FaqMutation
  article: ArticleMutation
  report: ReportMutation
  press: PressMutation
  release: ReleaseMutation
  relativePath: String
}

input DocumentMutation {
  page: PageMutation
  bio: BioMutation
  faq: FaqMutation
  article: ArticleMutation
  report: ReportMutation
  press: PressMutation
  release: ReleaseMutation
}

input PageIndexBlocksListButtonListMutation {
  buttonText: String
  buttonLink: String
}

input PageIndexBlocksListMutation {
  title: String
  text: String
  image: String
  alt: String
  button: String
  buttonList: [PageIndexBlocksListButtonListMutation]
}

input PageIndexMutation {
  title: String
  bannerTitle: String
  bannerText: String
  blocksList: [PageIndexBlocksListMutation]
  latestBanner: String
  latestActionText: String
  latestActionImage: String
  latestActionVideo: String
  latestActionButton: String
  latestActionLink: String
}

input PageAboutMutation {
  title: String
  bannerTitle: String
}

input PageRightsrecorderIconBlocksListMutation {
  title: String
  text: String
  image: String
}

input PageRightsrecorderMutation {
  title: String
  bannerTitle: String
  bannerText: String
  iconBlocksList: [PageRightsrecorderIconBlocksListMutation]
}

input PageAdvocateportalIconBlocksListMutation {
  title: String
  text: String
  image: String
  button: String
  buttonText: String
}

input PageAdvocateportalMutation {
  title: String
  bannerTitle: String
  bannerText: String
  iconBlocksList: [PageAdvocateportalIconBlocksListMutation]
  yellowBannerTitle: String
  yellowBannerText: String
}

input PageDatapageBlocksListButtonListMutation {
  buttonText: String
}

input PageDatapageBlocksListMutation {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageDatapageBlocksListButtonListMutation]
}

input PageDatapageMutation {
  title: String
  bannerTitle: String
  bannerText: String
  blocksList: [PageDatapageBlocksListMutation]
  orangeBannerTitle: String
  orangeBannerText: String
}

input PageVoucherholdersBlocksListButtonListMutation {
  buttonText: String
  buttonLink: String
}

input PageVoucherholdersBlocksListMutation {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageVoucherholdersBlocksListButtonListMutation]
}

input PageVoucherholdersLinksListMutation {
  title: String
  text: String
  image: String
  button: String
  buttonText: String
  buttonLink: String
}

input PageVoucherholdersMutation {
  title: String
  bannerTitle: String
  bannerText: String
  blocksList: [PageVoucherholdersBlocksListMutation]
  keyImage1: String
  keyImage2: String
  keyImage3: String
  keyImage4: String
  quote: String
  quoteAuthor: String
  authorTitle: String
  linksList: [PageVoucherholdersLinksListMutation]
}

input PageCommunityorganizersBlocksListButtonListMutation {
  buttonText: String
  buttonLink: String
}

input PageCommunityorganizersBlocksListMutation {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageCommunityorganizersBlocksListButtonListMutation]
}

input PageCommunityorganizersMutation {
  title: String
  bannerTitle: String
  bannerSubtitle: String
  bannerText: String
  blocksList: [PageCommunityorganizersBlocksListMutation]
  orangeBannerTitle: String
}

input PageHousingspecialistsLinksListButtonListMutation {
  buttonText: String
  buttonLink: String
}

input PageHousingspecialistsLinksListMutation {
  title: String
  content: JSON
  image: String
  button: String
  buttonList: [PageHousingspecialistsLinksListButtonListMutation]
}

input PageHousingspecialistsPartnersListMutation {
  name: String
  logo: String
  link: String
}

input PageHousingspecialistsMutation {
  title: String
  bannerTitle: String
  bannerSubtitle: String
  quote: String
  quoteAuthor: String
  quoteTitle: String
  quoteImg: String
  linksList: [PageHousingspecialistsLinksListMutation]
  partnersList: [PageHousingspecialistsPartnersListMutation]
}

input PageFundingBlocksListButtonListMutation {
  buttonText: String
  buttonLink: String
}

input PageFundingBlocksListMutation {
  title: String
  text: String
  image: String
  button: String
  buttonList: [PageFundingBlocksListButtonListMutation]
}

input PageFundingFundersListMutation {
  name: String
  logo: String
  link: String
}

input PageFundingMutation {
  title: String
  bannerTitle: String
  bannerText: String
  blocksList: [PageFundingBlocksListMutation]
  fundersList: [PageFundingFundersListMutation]
  orangeBannerTitle: String
}

input PagePolicyMutation {
  title: String
  effective: String
  revised: String
  body: JSON
}

input PageMutation {
  index: PageIndexMutation
  about: PageAboutMutation
  rightsrecorder: PageRightsrecorderMutation
  advocateportal: PageAdvocateportalMutation
  datapage: PageDatapageMutation
  voucherholders: PageVoucherholdersMutation
  communityorganizers: PageCommunityorganizersMutation
  housingspecialists: PageHousingspecialistsMutation
  funding: PageFundingMutation
  policy: PagePolicyMutation
}

input BioMutation {
  name: String
  title: String
  tags: [String]
  image: String
  order: Float
}

input FaqMutation {
  question: String
  answer: JSON
  tags: [String]
  order: Float
}

input ArticleMutation {
  title: String
  author: String
  excerpt: String
  image: String
  tags: [String]
  keywords: [String]
  body: JSON
}

input ReportMutation {
  reportTitle: String
  reportSummaryTop: String
  reportSummary: String
  reportPDF: String
}

input PressMutation {
  title: String
  excerpt: String
  image: String
  keywords: [String]
  link: String
}

input ReleaseMutation {
  title: String
  excerpt: String
  keywords: [String]
  link: String
}

schema {
  query: Query
  mutation: Mutation
}
