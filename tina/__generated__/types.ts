//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** References another document, used as a foreign key */
  Reference: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  basename: Scalars['String']['output'];
  breadcrumbs: Array<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  relativePath: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  template: Scalars['String']['output'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Folder = {
  __typename?: 'Folder';
  name: Scalars['String']['output'];
  path: Scalars['String']['output'];
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean']['output'];
  hasNextPage: Scalars['Boolean']['output'];
  startCursor: Scalars['String']['output'];
  endCursor: Scalars['String']['output'];
};

export type Node = {
  id: Scalars['ID']['output'];
};

export type Document = {
  id: Scalars['ID']['output'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON']['output'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']['output'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']['output']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  page: Page;
  pageConnection: PageConnection;
  bio: Bio;
  bioConnection: BioConnection;
  faq: Faq;
  faqConnection: FaqConnection;
  article: Article;
  articleConnection: ArticleConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String']['input'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<PageFilter>;
};


export type QueryBioArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryBioConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<BioFilter>;
};


export type QueryFaqArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryFaqConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<FaqFilter>;
};


export type QueryArticleArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryArticleConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ArticleFilter>;
};

export type DocumentFilter = {
  page?: InputMaybe<PageFilter>;
  bio?: InputMaybe<BioFilter>;
  faq?: InputMaybe<FaqFilter>;
  article?: InputMaybe<ArticleFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  format?: Maybe<Scalars['String']['output']>;
  matches?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocumentFilter>;
  folder?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentNode = PageIndex | PageAbout | PageRightsrecorder | PageAdvocateportal | PageDatapage | PageVoucherholders | PageCommunityorganizers | PageHousingspecialists | PageFunding | Bio | Faq | Article | Folder;

export type PageIndexBlocksListButtonList = {
  __typename?: 'PageIndexBlocksListButtonList';
  buttonText?: Maybe<Scalars['String']['output']>;
  buttonLink?: Maybe<Scalars['String']['output']>;
};

export type PageIndexBlocksList = {
  __typename?: 'PageIndexBlocksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  alt?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonList?: Maybe<Array<Maybe<PageIndexBlocksListButtonList>>>;
};

export type PageIndex = Node & Document & {
  __typename?: 'PageIndex';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerText?: Maybe<Scalars['String']['output']>;
  blocksList?: Maybe<Array<Maybe<PageIndexBlocksList>>>;
  latestBanner?: Maybe<Scalars['String']['output']>;
  latestActionText?: Maybe<Scalars['String']['output']>;
  latestActionImage?: Maybe<Scalars['String']['output']>;
  latestActionVideo?: Maybe<Scalars['String']['output']>;
  latestActionButton?: Maybe<Scalars['String']['output']>;
  latestActionLink?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageAbout = Node & Document & {
  __typename?: 'PageAbout';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageRightsrecorderIconBlocksList = {
  __typename?: 'PageRightsrecorderIconBlocksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type PageRightsrecorder = Node & Document & {
  __typename?: 'PageRightsrecorder';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerText?: Maybe<Scalars['String']['output']>;
  iconBlocksList?: Maybe<Array<Maybe<PageRightsrecorderIconBlocksList>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageAdvocateportalIconBlocksList = {
  __typename?: 'PageAdvocateportalIconBlocksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type PageAdvocateportal = Node & Document & {
  __typename?: 'PageAdvocateportal';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerText?: Maybe<Scalars['String']['output']>;
  iconBlocksList?: Maybe<Array<Maybe<PageAdvocateportalIconBlocksList>>>;
  yellowBannerTitle?: Maybe<Scalars['String']['output']>;
  yellowBannerText?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageDatapageBlocksListButtonList = {
  __typename?: 'PageDatapageBlocksListButtonList';
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type PageDatapageBlocksList = {
  __typename?: 'PageDatapageBlocksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonList?: Maybe<Array<Maybe<PageDatapageBlocksListButtonList>>>;
};

export type PageDatapage = Node & Document & {
  __typename?: 'PageDatapage';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerText?: Maybe<Scalars['String']['output']>;
  blocksList?: Maybe<Array<Maybe<PageDatapageBlocksList>>>;
  orangeBannerTitle?: Maybe<Scalars['String']['output']>;
  orangeBannerText?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageVoucherholdersBlocksListButtonList = {
  __typename?: 'PageVoucherholdersBlocksListButtonList';
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type PageVoucherholdersBlocksList = {
  __typename?: 'PageVoucherholdersBlocksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonList?: Maybe<Array<Maybe<PageVoucherholdersBlocksListButtonList>>>;
};

export type PageVoucherholdersLinksList = {
  __typename?: 'PageVoucherholdersLinksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type PageVoucherholders = Node & Document & {
  __typename?: 'PageVoucherholders';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerText?: Maybe<Scalars['String']['output']>;
  blocksList?: Maybe<Array<Maybe<PageVoucherholdersBlocksList>>>;
  keyImage1?: Maybe<Scalars['String']['output']>;
  keyImage2?: Maybe<Scalars['String']['output']>;
  keyImage3?: Maybe<Scalars['String']['output']>;
  keyImage4?: Maybe<Scalars['String']['output']>;
  quote?: Maybe<Scalars['String']['output']>;
  quoteAuthor?: Maybe<Scalars['String']['output']>;
  authorTitle?: Maybe<Scalars['String']['output']>;
  linksList?: Maybe<Array<Maybe<PageVoucherholdersLinksList>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageCommunityorganizersBlocksListButtonList = {
  __typename?: 'PageCommunityorganizersBlocksListButtonList';
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type PageCommunityorganizersBlocksList = {
  __typename?: 'PageCommunityorganizersBlocksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonList?: Maybe<Array<Maybe<PageCommunityorganizersBlocksListButtonList>>>;
};

export type PageCommunityorganizers = Node & Document & {
  __typename?: 'PageCommunityorganizers';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerSubtitle?: Maybe<Scalars['String']['output']>;
  bannerText?: Maybe<Scalars['String']['output']>;
  blocksList?: Maybe<Array<Maybe<PageCommunityorganizersBlocksList>>>;
  orangeBannerTitle?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageHousingspecialistsLinksListButtonList = {
  __typename?: 'PageHousingspecialistsLinksListButtonList';
  buttonText?: Maybe<Scalars['String']['output']>;
  buttonLink?: Maybe<Scalars['String']['output']>;
};

export type PageHousingspecialistsLinksList = {
  __typename?: 'PageHousingspecialistsLinksList';
  title?: Maybe<Scalars['String']['output']>;
  content?: Maybe<Scalars['JSON']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonList?: Maybe<Array<Maybe<PageHousingspecialistsLinksListButtonList>>>;
};

export type PageHousingspecialistsPartnersList = {
  __typename?: 'PageHousingspecialistsPartnersList';
  partnerLogo?: Maybe<Scalars['String']['output']>;
  partnerLink?: Maybe<Scalars['String']['output']>;
};

export type PageHousingspecialists = Node & Document & {
  __typename?: 'PageHousingspecialists';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerSubtitle?: Maybe<Scalars['String']['output']>;
  quote?: Maybe<Scalars['String']['output']>;
  quoteAuthor?: Maybe<Scalars['String']['output']>;
  quoteTitle?: Maybe<Scalars['String']['output']>;
  quoteImg?: Maybe<Scalars['String']['output']>;
  linksList?: Maybe<Array<Maybe<PageHousingspecialistsLinksList>>>;
  partnersList?: Maybe<Array<Maybe<PageHousingspecialistsPartnersList>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageFundingBlocksListButtonList = {
  __typename?: 'PageFundingBlocksListButtonList';
  buttonText?: Maybe<Scalars['String']['output']>;
};

export type PageFundingBlocksList = {
  __typename?: 'PageFundingBlocksList';
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  button?: Maybe<Scalars['String']['output']>;
  buttonList?: Maybe<Array<Maybe<PageFundingBlocksListButtonList>>>;
};

export type PageFunding = Node & Document & {
  __typename?: 'PageFunding';
  title: Scalars['String']['output'];
  bannerTitle?: Maybe<Scalars['String']['output']>;
  bannerText?: Maybe<Scalars['String']['output']>;
  blocksList?: Maybe<Array<Maybe<PageFundingBlocksList>>>;
  orangeBannerTitle?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type Page = PageIndex | PageAbout | PageRightsrecorder | PageAdvocateportal | PageDatapage | PageVoucherholders | PageCommunityorganizers | PageHousingspecialists | PageFunding;

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type PageIndexBlocksListButtonListFilter = {
  buttonText?: InputMaybe<StringFilter>;
  buttonLink?: InputMaybe<StringFilter>;
};

export type PageIndexBlocksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
  button?: InputMaybe<StringFilter>;
  buttonList?: InputMaybe<PageIndexBlocksListButtonListFilter>;
};

export type PageIndexFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerText?: InputMaybe<StringFilter>;
  blocksList?: InputMaybe<PageIndexBlocksListFilter>;
  latestBanner?: InputMaybe<StringFilter>;
  latestActionText?: InputMaybe<StringFilter>;
  latestActionImage?: InputMaybe<ImageFilter>;
  latestActionVideo?: InputMaybe<StringFilter>;
  latestActionButton?: InputMaybe<StringFilter>;
  latestActionLink?: InputMaybe<StringFilter>;
};

export type PageAboutFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
};

export type PageRightsrecorderIconBlocksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonText?: InputMaybe<StringFilter>;
};

export type PageRightsrecorderFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerText?: InputMaybe<StringFilter>;
  iconBlocksList?: InputMaybe<PageRightsrecorderIconBlocksListFilter>;
};

export type PageAdvocateportalIconBlocksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonText?: InputMaybe<StringFilter>;
};

export type PageAdvocateportalFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerText?: InputMaybe<StringFilter>;
  iconBlocksList?: InputMaybe<PageAdvocateportalIconBlocksListFilter>;
  yellowBannerTitle?: InputMaybe<StringFilter>;
  yellowBannerText?: InputMaybe<StringFilter>;
};

export type PageDatapageBlocksListButtonListFilter = {
  buttonText?: InputMaybe<StringFilter>;
};

export type PageDatapageBlocksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonList?: InputMaybe<PageDatapageBlocksListButtonListFilter>;
};

export type PageDatapageFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerText?: InputMaybe<StringFilter>;
  blocksList?: InputMaybe<PageDatapageBlocksListFilter>;
  orangeBannerTitle?: InputMaybe<StringFilter>;
  orangeBannerText?: InputMaybe<StringFilter>;
};

export type PageVoucherholdersBlocksListButtonListFilter = {
  buttonText?: InputMaybe<StringFilter>;
};

export type PageVoucherholdersBlocksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonList?: InputMaybe<PageVoucherholdersBlocksListButtonListFilter>;
};

export type PageVoucherholdersLinksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonText?: InputMaybe<StringFilter>;
};

export type PageVoucherholdersFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerText?: InputMaybe<StringFilter>;
  blocksList?: InputMaybe<PageVoucherholdersBlocksListFilter>;
  keyImage1?: InputMaybe<ImageFilter>;
  keyImage2?: InputMaybe<ImageFilter>;
  keyImage3?: InputMaybe<ImageFilter>;
  keyImage4?: InputMaybe<ImageFilter>;
  quote?: InputMaybe<StringFilter>;
  quoteAuthor?: InputMaybe<StringFilter>;
  authorTitle?: InputMaybe<StringFilter>;
  linksList?: InputMaybe<PageVoucherholdersLinksListFilter>;
};

export type PageCommunityorganizersBlocksListButtonListFilter = {
  buttonText?: InputMaybe<StringFilter>;
};

export type PageCommunityorganizersBlocksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonList?: InputMaybe<PageCommunityorganizersBlocksListButtonListFilter>;
};

export type PageCommunityorganizersFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerSubtitle?: InputMaybe<StringFilter>;
  bannerText?: InputMaybe<StringFilter>;
  blocksList?: InputMaybe<PageCommunityorganizersBlocksListFilter>;
  orangeBannerTitle?: InputMaybe<StringFilter>;
};

export type RichTextFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PageHousingspecialistsLinksListButtonListFilter = {
  buttonText?: InputMaybe<StringFilter>;
  buttonLink?: InputMaybe<StringFilter>;
};

export type PageHousingspecialistsLinksListFilter = {
  title?: InputMaybe<StringFilter>;
  content?: InputMaybe<RichTextFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonList?: InputMaybe<PageHousingspecialistsLinksListButtonListFilter>;
};

export type PageHousingspecialistsPartnersListFilter = {
  partnerLogo?: InputMaybe<ImageFilter>;
  partnerLink?: InputMaybe<StringFilter>;
};

export type PageHousingspecialistsFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerSubtitle?: InputMaybe<StringFilter>;
  quote?: InputMaybe<StringFilter>;
  quoteAuthor?: InputMaybe<StringFilter>;
  quoteTitle?: InputMaybe<StringFilter>;
  quoteImg?: InputMaybe<ImageFilter>;
  linksList?: InputMaybe<PageHousingspecialistsLinksListFilter>;
  partnersList?: InputMaybe<PageHousingspecialistsPartnersListFilter>;
};

export type PageFundingBlocksListButtonListFilter = {
  buttonText?: InputMaybe<StringFilter>;
};

export type PageFundingBlocksListFilter = {
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  button?: InputMaybe<StringFilter>;
  buttonList?: InputMaybe<PageFundingBlocksListButtonListFilter>;
};

export type PageFundingFilter = {
  title?: InputMaybe<StringFilter>;
  bannerTitle?: InputMaybe<StringFilter>;
  bannerText?: InputMaybe<StringFilter>;
  blocksList?: InputMaybe<PageFundingBlocksListFilter>;
  orangeBannerTitle?: InputMaybe<StringFilter>;
};

export type PageFilter = {
  index?: InputMaybe<PageIndexFilter>;
  about?: InputMaybe<PageAboutFilter>;
  rightsrecorder?: InputMaybe<PageRightsrecorderFilter>;
  advocateportal?: InputMaybe<PageAdvocateportalFilter>;
  datapage?: InputMaybe<PageDatapageFilter>;
  voucherholders?: InputMaybe<PageVoucherholdersFilter>;
  communityorganizers?: InputMaybe<PageCommunityorganizersFilter>;
  housingspecialists?: InputMaybe<PageHousingspecialistsFilter>;
  funding?: InputMaybe<PageFundingFilter>;
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type Bio = Node & Document & {
  __typename?: 'Bio';
  name: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  image?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  eq?: InputMaybe<Scalars['Float']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
};

export type BioFilter = {
  name?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  tags?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  order?: InputMaybe<NumberFilter>;
};

export type BioConnectionEdges = {
  __typename?: 'BioConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Bio>;
};

export type BioConnection = Connection & {
  __typename?: 'BioConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<BioConnectionEdges>>>;
};

export type Faq = Node & Document & {
  __typename?: 'Faq';
  question: Scalars['String']['output'];
  answer?: Maybe<Scalars['JSON']['output']>;
  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  order?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type FaqFilter = {
  question?: InputMaybe<StringFilter>;
  answer?: InputMaybe<RichTextFilter>;
  tags?: InputMaybe<StringFilter>;
  order?: InputMaybe<NumberFilter>;
};

export type FaqConnectionEdges = {
  __typename?: 'FaqConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Faq>;
};

export type FaqConnection = Connection & {
  __typename?: 'FaqConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<FaqConnectionEdges>>>;
};

export type Article = Node & Document & {
  __typename?: 'Article';
  title: Scalars['String']['output'];
  author?: Maybe<Scalars['String']['output']>;
  excerpt?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  tags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  keywords?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  body?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type ArticleFilter = {
  title?: InputMaybe<StringFilter>;
  author?: InputMaybe<StringFilter>;
  excerpt?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageFilter>;
  tags?: InputMaybe<StringFilter>;
  keywords?: InputMaybe<StringFilter>;
  body?: InputMaybe<RichTextFilter>;
};

export type ArticleConnectionEdges = {
  __typename?: 'ArticleConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Article>;
};

export type ArticleConnection = Connection & {
  __typename?: 'ArticleConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<ArticleConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updatePage: Page;
  createPage: Page;
  updateBio: Bio;
  createBio: Bio;
  updateFaq: Faq;
  createFaq: Faq;
  updateArticle: Article;
  createArticle: Article;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']['input'];
  relativePath: Scalars['String']['input'];
  template?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String']['input'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String']['input'];
  params: PageMutation;
};


export type MutationUpdateBioArgs = {
  relativePath: Scalars['String']['input'];
  params: BioMutation;
};


export type MutationCreateBioArgs = {
  relativePath: Scalars['String']['input'];
  params: BioMutation;
};


export type MutationUpdateFaqArgs = {
  relativePath: Scalars['String']['input'];
  params: FaqMutation;
};


export type MutationCreateFaqArgs = {
  relativePath: Scalars['String']['input'];
  params: FaqMutation;
};


export type MutationUpdateArticleArgs = {
  relativePath: Scalars['String']['input'];
  params: ArticleMutation;
};


export type MutationCreateArticleArgs = {
  relativePath: Scalars['String']['input'];
  params: ArticleMutation;
};

export type DocumentUpdateMutation = {
  page?: InputMaybe<PageMutation>;
  bio?: InputMaybe<BioMutation>;
  faq?: InputMaybe<FaqMutation>;
  article?: InputMaybe<ArticleMutation>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentMutation = {
  page?: InputMaybe<PageMutation>;
  bio?: InputMaybe<BioMutation>;
  faq?: InputMaybe<FaqMutation>;
  article?: InputMaybe<ArticleMutation>;
};

export type PageIndexBlocksListButtonListMutation = {
  buttonText?: InputMaybe<Scalars['String']['input']>;
  buttonLink?: InputMaybe<Scalars['String']['input']>;
};

export type PageIndexBlocksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  alt?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonList?: InputMaybe<Array<InputMaybe<PageIndexBlocksListButtonListMutation>>>;
};

export type PageIndexMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerText?: InputMaybe<Scalars['String']['input']>;
  blocksList?: InputMaybe<Array<InputMaybe<PageIndexBlocksListMutation>>>;
  latestBanner?: InputMaybe<Scalars['String']['input']>;
  latestActionText?: InputMaybe<Scalars['String']['input']>;
  latestActionImage?: InputMaybe<Scalars['String']['input']>;
  latestActionVideo?: InputMaybe<Scalars['String']['input']>;
  latestActionButton?: InputMaybe<Scalars['String']['input']>;
  latestActionLink?: InputMaybe<Scalars['String']['input']>;
};

export type PageAboutMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
};

export type PageRightsrecorderIconBlocksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type PageRightsrecorderMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerText?: InputMaybe<Scalars['String']['input']>;
  iconBlocksList?: InputMaybe<Array<InputMaybe<PageRightsrecorderIconBlocksListMutation>>>;
};

export type PageAdvocateportalIconBlocksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type PageAdvocateportalMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerText?: InputMaybe<Scalars['String']['input']>;
  iconBlocksList?: InputMaybe<Array<InputMaybe<PageAdvocateportalIconBlocksListMutation>>>;
  yellowBannerTitle?: InputMaybe<Scalars['String']['input']>;
  yellowBannerText?: InputMaybe<Scalars['String']['input']>;
};

export type PageDatapageBlocksListButtonListMutation = {
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type PageDatapageBlocksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonList?: InputMaybe<Array<InputMaybe<PageDatapageBlocksListButtonListMutation>>>;
};

export type PageDatapageMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerText?: InputMaybe<Scalars['String']['input']>;
  blocksList?: InputMaybe<Array<InputMaybe<PageDatapageBlocksListMutation>>>;
  orangeBannerTitle?: InputMaybe<Scalars['String']['input']>;
  orangeBannerText?: InputMaybe<Scalars['String']['input']>;
};

export type PageVoucherholdersBlocksListButtonListMutation = {
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type PageVoucherholdersBlocksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonList?: InputMaybe<Array<InputMaybe<PageVoucherholdersBlocksListButtonListMutation>>>;
};

export type PageVoucherholdersLinksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type PageVoucherholdersMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerText?: InputMaybe<Scalars['String']['input']>;
  blocksList?: InputMaybe<Array<InputMaybe<PageVoucherholdersBlocksListMutation>>>;
  keyImage1?: InputMaybe<Scalars['String']['input']>;
  keyImage2?: InputMaybe<Scalars['String']['input']>;
  keyImage3?: InputMaybe<Scalars['String']['input']>;
  keyImage4?: InputMaybe<Scalars['String']['input']>;
  quote?: InputMaybe<Scalars['String']['input']>;
  quoteAuthor?: InputMaybe<Scalars['String']['input']>;
  authorTitle?: InputMaybe<Scalars['String']['input']>;
  linksList?: InputMaybe<Array<InputMaybe<PageVoucherholdersLinksListMutation>>>;
};

export type PageCommunityorganizersBlocksListButtonListMutation = {
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type PageCommunityorganizersBlocksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonList?: InputMaybe<Array<InputMaybe<PageCommunityorganizersBlocksListButtonListMutation>>>;
};

export type PageCommunityorganizersMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerSubtitle?: InputMaybe<Scalars['String']['input']>;
  bannerText?: InputMaybe<Scalars['String']['input']>;
  blocksList?: InputMaybe<Array<InputMaybe<PageCommunityorganizersBlocksListMutation>>>;
  orangeBannerTitle?: InputMaybe<Scalars['String']['input']>;
};

export type PageHousingspecialistsLinksListButtonListMutation = {
  buttonText?: InputMaybe<Scalars['String']['input']>;
  buttonLink?: InputMaybe<Scalars['String']['input']>;
};

export type PageHousingspecialistsLinksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['JSON']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonList?: InputMaybe<Array<InputMaybe<PageHousingspecialistsLinksListButtonListMutation>>>;
};

export type PageHousingspecialistsPartnersListMutation = {
  partnerLogo?: InputMaybe<Scalars['String']['input']>;
  partnerLink?: InputMaybe<Scalars['String']['input']>;
};

export type PageHousingspecialistsMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerSubtitle?: InputMaybe<Scalars['String']['input']>;
  quote?: InputMaybe<Scalars['String']['input']>;
  quoteAuthor?: InputMaybe<Scalars['String']['input']>;
  quoteTitle?: InputMaybe<Scalars['String']['input']>;
  quoteImg?: InputMaybe<Scalars['String']['input']>;
  linksList?: InputMaybe<Array<InputMaybe<PageHousingspecialistsLinksListMutation>>>;
  partnersList?: InputMaybe<Array<InputMaybe<PageHousingspecialistsPartnersListMutation>>>;
};

export type PageFundingBlocksListButtonListMutation = {
  buttonText?: InputMaybe<Scalars['String']['input']>;
};

export type PageFundingBlocksListMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  button?: InputMaybe<Scalars['String']['input']>;
  buttonList?: InputMaybe<Array<InputMaybe<PageFundingBlocksListButtonListMutation>>>;
};

export type PageFundingMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  bannerTitle?: InputMaybe<Scalars['String']['input']>;
  bannerText?: InputMaybe<Scalars['String']['input']>;
  blocksList?: InputMaybe<Array<InputMaybe<PageFundingBlocksListMutation>>>;
  orangeBannerTitle?: InputMaybe<Scalars['String']['input']>;
};

export type PageMutation = {
  index?: InputMaybe<PageIndexMutation>;
  about?: InputMaybe<PageAboutMutation>;
  rightsrecorder?: InputMaybe<PageRightsrecorderMutation>;
  advocateportal?: InputMaybe<PageAdvocateportalMutation>;
  datapage?: InputMaybe<PageDatapageMutation>;
  voucherholders?: InputMaybe<PageVoucherholdersMutation>;
  communityorganizers?: InputMaybe<PageCommunityorganizersMutation>;
  housingspecialists?: InputMaybe<PageHousingspecialistsMutation>;
  funding?: InputMaybe<PageFundingMutation>;
};

export type BioMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  image?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Float']['input']>;
};

export type FaqMutation = {
  question?: InputMaybe<Scalars['String']['input']>;
  answer?: InputMaybe<Scalars['JSON']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  order?: InputMaybe<Scalars['Float']['input']>;
};

export type ArticleMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  author?: InputMaybe<Scalars['String']['input']>;
  excerpt?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  keywords?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  body?: InputMaybe<Scalars['JSON']['input']>;
};

type PageParts_PageIndex_Fragment = { __typename?: 'PageIndex', title: string, bannerTitle?: string | null, bannerText?: string | null, latestBanner?: string | null, latestActionText?: string | null, latestActionImage?: string | null, latestActionVideo?: string | null, latestActionButton?: string | null, latestActionLink?: string | null, blocksList?: Array<{ __typename: 'PageIndexBlocksList', title?: string | null, text?: string | null, image?: string | null, alt?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageIndexBlocksListButtonList', buttonText?: string | null, buttonLink?: string | null } | null> | null } | null> | null };

type PageParts_PageAbout_Fragment = { __typename?: 'PageAbout', title: string, bannerTitle?: string | null };

type PageParts_PageRightsrecorder_Fragment = { __typename?: 'PageRightsrecorder', title: string, bannerTitle?: string | null, bannerText?: string | null, iconBlocksList?: Array<{ __typename: 'PageRightsrecorderIconBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null };

type PageParts_PageAdvocateportal_Fragment = { __typename?: 'PageAdvocateportal', title: string, bannerTitle?: string | null, bannerText?: string | null, yellowBannerTitle?: string | null, yellowBannerText?: string | null, iconBlocksList?: Array<{ __typename: 'PageAdvocateportalIconBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null };

type PageParts_PageDatapage_Fragment = { __typename?: 'PageDatapage', title: string, bannerTitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, orangeBannerText?: string | null, blocksList?: Array<{ __typename: 'PageDatapageBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageDatapageBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null };

type PageParts_PageVoucherholders_Fragment = { __typename?: 'PageVoucherholders', title: string, bannerTitle?: string | null, bannerText?: string | null, keyImage1?: string | null, keyImage2?: string | null, keyImage3?: string | null, keyImage4?: string | null, quote?: string | null, quoteAuthor?: string | null, authorTitle?: string | null, blocksList?: Array<{ __typename: 'PageVoucherholdersBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageVoucherholdersBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null, linksList?: Array<{ __typename: 'PageVoucherholdersLinksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null };

type PageParts_PageCommunityorganizers_Fragment = { __typename?: 'PageCommunityorganizers', title: string, bannerTitle?: string | null, bannerSubtitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, blocksList?: Array<{ __typename: 'PageCommunityorganizersBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageCommunityorganizersBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null };

type PageParts_PageHousingspecialists_Fragment = { __typename?: 'PageHousingspecialists', title: string, bannerTitle?: string | null, bannerSubtitle?: string | null, quote?: string | null, quoteAuthor?: string | null, quoteTitle?: string | null, quoteImg?: string | null, linksList?: Array<{ __typename: 'PageHousingspecialistsLinksList', title?: string | null, content?: any | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageHousingspecialistsLinksListButtonList', buttonText?: string | null, buttonLink?: string | null } | null> | null } | null> | null, partnersList?: Array<{ __typename: 'PageHousingspecialistsPartnersList', partnerLogo?: string | null, partnerLink?: string | null } | null> | null };

type PageParts_PageFunding_Fragment = { __typename?: 'PageFunding', title: string, bannerTitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, blocksList?: Array<{ __typename: 'PageFundingBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageFundingBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null };

export type PagePartsFragment = PageParts_PageIndex_Fragment | PageParts_PageAbout_Fragment | PageParts_PageRightsrecorder_Fragment | PageParts_PageAdvocateportal_Fragment | PageParts_PageDatapage_Fragment | PageParts_PageVoucherholders_Fragment | PageParts_PageCommunityorganizers_Fragment | PageParts_PageHousingspecialists_Fragment | PageParts_PageFunding_Fragment;

export type BioPartsFragment = { __typename?: 'Bio', name: string, title?: string | null, tags?: Array<string | null> | null, image?: string | null, order?: number | null };

export type FaqPartsFragment = { __typename?: 'Faq', question: string, answer?: any | null, tags?: Array<string | null> | null, order?: number | null };

export type ArticlePartsFragment = { __typename?: 'Article', title: string, author?: string | null, excerpt?: string | null, image?: string | null, tags?: Array<string | null> | null, keywords?: Array<string | null> | null, body?: any | null };

export type PageQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type PageQuery = { __typename?: 'Query', page: { __typename?: 'PageIndex', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, latestBanner?: string | null, latestActionText?: string | null, latestActionImage?: string | null, latestActionVideo?: string | null, latestActionButton?: string | null, latestActionLink?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageIndexBlocksList', title?: string | null, text?: string | null, image?: string | null, alt?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageIndexBlocksListButtonList', buttonText?: string | null, buttonLink?: string | null } | null> | null } | null> | null } | { __typename?: 'PageAbout', id: string, title: string, bannerTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | { __typename?: 'PageRightsrecorder', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, iconBlocksList?: Array<{ __typename: 'PageRightsrecorderIconBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null } | { __typename?: 'PageAdvocateportal', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, yellowBannerTitle?: string | null, yellowBannerText?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, iconBlocksList?: Array<{ __typename: 'PageAdvocateportalIconBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null } | { __typename?: 'PageDatapage', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, orangeBannerText?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageDatapageBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageDatapageBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null } | { __typename?: 'PageVoucherholders', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, keyImage1?: string | null, keyImage2?: string | null, keyImage3?: string | null, keyImage4?: string | null, quote?: string | null, quoteAuthor?: string | null, authorTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageVoucherholdersBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageVoucherholdersBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null, linksList?: Array<{ __typename: 'PageVoucherholdersLinksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null } | { __typename?: 'PageCommunityorganizers', id: string, title: string, bannerTitle?: string | null, bannerSubtitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageCommunityorganizersBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageCommunityorganizersBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null } | { __typename?: 'PageHousingspecialists', id: string, title: string, bannerTitle?: string | null, bannerSubtitle?: string | null, quote?: string | null, quoteAuthor?: string | null, quoteTitle?: string | null, quoteImg?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, linksList?: Array<{ __typename: 'PageHousingspecialistsLinksList', title?: string | null, content?: any | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageHousingspecialistsLinksListButtonList', buttonText?: string | null, buttonLink?: string | null } | null> | null } | null> | null, partnersList?: Array<{ __typename: 'PageHousingspecialistsPartnersList', partnerLogo?: string | null, partnerLink?: string | null } | null> | null } | { __typename?: 'PageFunding', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageFundingBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageFundingBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null } };

export type PageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<PageFilter>;
}>;


export type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PageConnectionEdges', cursor: string, node?: { __typename?: 'PageIndex', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, latestBanner?: string | null, latestActionText?: string | null, latestActionImage?: string | null, latestActionVideo?: string | null, latestActionButton?: string | null, latestActionLink?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageIndexBlocksList', title?: string | null, text?: string | null, image?: string | null, alt?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageIndexBlocksListButtonList', buttonText?: string | null, buttonLink?: string | null } | null> | null } | null> | null } | { __typename?: 'PageAbout', id: string, title: string, bannerTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | { __typename?: 'PageRightsrecorder', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, iconBlocksList?: Array<{ __typename: 'PageRightsrecorderIconBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null } | { __typename?: 'PageAdvocateportal', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, yellowBannerTitle?: string | null, yellowBannerText?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, iconBlocksList?: Array<{ __typename: 'PageAdvocateportalIconBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null } | { __typename?: 'PageDatapage', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, orangeBannerText?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageDatapageBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageDatapageBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null } | { __typename?: 'PageVoucherholders', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, keyImage1?: string | null, keyImage2?: string | null, keyImage3?: string | null, keyImage4?: string | null, quote?: string | null, quoteAuthor?: string | null, authorTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageVoucherholdersBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageVoucherholdersBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null, linksList?: Array<{ __typename: 'PageVoucherholdersLinksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonText?: string | null } | null> | null } | { __typename?: 'PageCommunityorganizers', id: string, title: string, bannerTitle?: string | null, bannerSubtitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageCommunityorganizersBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageCommunityorganizersBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null } | { __typename?: 'PageHousingspecialists', id: string, title: string, bannerTitle?: string | null, bannerSubtitle?: string | null, quote?: string | null, quoteAuthor?: string | null, quoteTitle?: string | null, quoteImg?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, linksList?: Array<{ __typename: 'PageHousingspecialistsLinksList', title?: string | null, content?: any | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageHousingspecialistsLinksListButtonList', buttonText?: string | null, buttonLink?: string | null } | null> | null } | null> | null, partnersList?: Array<{ __typename: 'PageHousingspecialistsPartnersList', partnerLogo?: string | null, partnerLink?: string | null } | null> | null } | { __typename?: 'PageFunding', id: string, title: string, bannerTitle?: string | null, bannerText?: string | null, orangeBannerTitle?: string | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocksList?: Array<{ __typename: 'PageFundingBlocksList', title?: string | null, text?: string | null, image?: string | null, button?: string | null, buttonList?: Array<{ __typename: 'PageFundingBlocksListButtonList', buttonText?: string | null } | null> | null } | null> | null } | null } | null> | null } };

export type BioQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type BioQuery = { __typename?: 'Query', bio: { __typename?: 'Bio', id: string, name: string, title?: string | null, tags?: Array<string | null> | null, image?: string | null, order?: number | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type BioConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<BioFilter>;
}>;


export type BioConnectionQuery = { __typename?: 'Query', bioConnection: { __typename?: 'BioConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'BioConnectionEdges', cursor: string, node?: { __typename?: 'Bio', id: string, name: string, title?: string | null, tags?: Array<string | null> | null, image?: string | null, order?: number | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type FaqQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type FaqQuery = { __typename?: 'Query', faq: { __typename?: 'Faq', id: string, question: string, answer?: any | null, tags?: Array<string | null> | null, order?: number | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type FaqConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<FaqFilter>;
}>;


export type FaqConnectionQuery = { __typename?: 'Query', faqConnection: { __typename?: 'FaqConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'FaqConnectionEdges', cursor: string, node?: { __typename?: 'Faq', id: string, question: string, answer?: any | null, tags?: Array<string | null> | null, order?: number | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export type ArticleQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type ArticleQuery = { __typename?: 'Query', article: { __typename?: 'Article', id: string, title: string, author?: string | null, excerpt?: string | null, image?: string | null, tags?: Array<string | null> | null, keywords?: Array<string | null> | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } };

export type ArticleConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<ArticleFilter>;
}>;


export type ArticleConnectionQuery = { __typename?: 'Query', articleConnection: { __typename?: 'ArticleConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'ArticleConnectionEdges', cursor: string, node?: { __typename?: 'Article', id: string, title: string, author?: string | null, excerpt?: string | null, image?: string | null, tags?: Array<string | null> | null, keywords?: Array<string | null> | null, body?: any | null, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string } } | null } | null> | null } };

export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  ... on PageIndex {
    title
    bannerTitle
    bannerText
    blocksList {
      __typename
      title
      text
      image
      alt
      button
      buttonList {
        __typename
        buttonText
        buttonLink
      }
    }
    latestBanner
    latestActionText
    latestActionImage
    latestActionVideo
    latestActionButton
    latestActionLink
  }
  ... on PageAbout {
    title
    bannerTitle
  }
  ... on PageRightsrecorder {
    title
    bannerTitle
    bannerText
    iconBlocksList {
      __typename
      title
      text
      image
      button
      buttonText
    }
  }
  ... on PageAdvocateportal {
    title
    bannerTitle
    bannerText
    iconBlocksList {
      __typename
      title
      text
      image
      button
      buttonText
    }
    yellowBannerTitle
    yellowBannerText
  }
  ... on PageDatapage {
    title
    bannerTitle
    bannerText
    blocksList {
      __typename
      title
      text
      image
      button
      buttonList {
        __typename
        buttonText
      }
    }
    orangeBannerTitle
    orangeBannerText
  }
  ... on PageVoucherholders {
    title
    bannerTitle
    bannerText
    blocksList {
      __typename
      title
      text
      image
      button
      buttonList {
        __typename
        buttonText
      }
    }
    keyImage1
    keyImage2
    keyImage3
    keyImage4
    quote
    quoteAuthor
    authorTitle
    linksList {
      __typename
      title
      text
      image
      button
      buttonText
    }
  }
  ... on PageCommunityorganizers {
    title
    bannerTitle
    bannerSubtitle
    bannerText
    blocksList {
      __typename
      title
      text
      image
      button
      buttonList {
        __typename
        buttonText
      }
    }
    orangeBannerTitle
  }
  ... on PageHousingspecialists {
    title
    bannerTitle
    bannerSubtitle
    quote
    quoteAuthor
    quoteTitle
    quoteImg
    linksList {
      __typename
      title
      content
      image
      button
      buttonList {
        __typename
        buttonText
        buttonLink
      }
    }
    partnersList {
      __typename
      partnerLogo
      partnerLink
    }
  }
  ... on PageFunding {
    title
    bannerTitle
    bannerText
    blocksList {
      __typename
      title
      text
      image
      button
      buttonList {
        __typename
        buttonText
      }
    }
    orangeBannerTitle
  }
}
    `;
export const BioPartsFragmentDoc = gql`
    fragment BioParts on Bio {
  name
  title
  tags
  image
  order
}
    `;
export const FaqPartsFragmentDoc = gql`
    fragment FaqParts on Faq {
  question
  answer
  tags
  order
}
    `;
export const ArticlePartsFragmentDoc = gql`
    fragment ArticleParts on Article {
  title
  author
  excerpt
  image
  tags
  keywords
  body
}
    `;
export const PageDocument = gql`
    query page($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
}
    ${PagePartsFragmentDoc}`;
export const PageConnectionDocument = gql`
    query pageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PageFilter) {
  pageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PageParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export const BioDocument = gql`
    query bio($relativePath: String!) {
  bio(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...BioParts
  }
}
    ${BioPartsFragmentDoc}`;
export const BioConnectionDocument = gql`
    query bioConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: BioFilter) {
  bioConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...BioParts
      }
    }
  }
}
    ${BioPartsFragmentDoc}`;
export const FaqDocument = gql`
    query faq($relativePath: String!) {
  faq(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...FaqParts
  }
}
    ${FaqPartsFragmentDoc}`;
export const FaqConnectionDocument = gql`
    query faqConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: FaqFilter) {
  faqConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...FaqParts
      }
    }
  }
}
    ${FaqPartsFragmentDoc}`;
export const ArticleDocument = gql`
    query article($relativePath: String!) {
  article(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...ArticleParts
  }
}
    ${ArticlePartsFragmentDoc}`;
export const ArticleConnectionDocument = gql`
    query articleConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: ArticleFilter) {
  articleConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...ArticleParts
      }
    }
  }
}
    ${ArticlePartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, variables: PageQueryVariables, query: string}> {
        return requester<{data: PageQuery, variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);
      },
    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}> {
        return requester<{data: PageConnectionQuery, variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);
      },
    bio(variables: BioQueryVariables, options?: C): Promise<{data: BioQuery, variables: BioQueryVariables, query: string}> {
        return requester<{data: BioQuery, variables: BioQueryVariables, query: string}, BioQueryVariables>(BioDocument, variables, options);
      },
    bioConnection(variables?: BioConnectionQueryVariables, options?: C): Promise<{data: BioConnectionQuery, variables: BioConnectionQueryVariables, query: string}> {
        return requester<{data: BioConnectionQuery, variables: BioConnectionQueryVariables, query: string}, BioConnectionQueryVariables>(BioConnectionDocument, variables, options);
      },
    faq(variables: FaqQueryVariables, options?: C): Promise<{data: FaqQuery, variables: FaqQueryVariables, query: string}> {
        return requester<{data: FaqQuery, variables: FaqQueryVariables, query: string}, FaqQueryVariables>(FaqDocument, variables, options);
      },
    faqConnection(variables?: FaqConnectionQueryVariables, options?: C): Promise<{data: FaqConnectionQuery, variables: FaqConnectionQueryVariables, query: string}> {
        return requester<{data: FaqConnectionQuery, variables: FaqConnectionQueryVariables, query: string}, FaqConnectionQueryVariables>(FaqConnectionDocument, variables, options);
      },
    article(variables: ArticleQueryVariables, options?: C): Promise<{data: ArticleQuery, variables: ArticleQueryVariables, query: string}> {
        return requester<{data: ArticleQuery, variables: ArticleQueryVariables, query: string}, ArticleQueryVariables>(ArticleDocument, variables, options);
      },
    articleConnection(variables?: ArticleConnectionQueryVariables, options?: C): Promise<{data: ArticleConnectionQuery, variables: ArticleConnectionQueryVariables, query: string}> {
        return requester<{data: ArticleConnectionQuery, variables: ArticleConnectionQueryVariables, query: string}, ArticleConnectionQueryVariables>(ArticleConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (
  client: TinaClient,
  options?: { branch?: string }
) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: { branch?: string },
    client
  ) => Promise<any> = async (doc, vars, options) => {
    let url = client.apiUrl
    if (options?.branch) {
      const index = client.apiUrl.lastIndexOf('/')
      url = client.apiUrl.substring(0, index + 1) + options.branch
    }
    const data = await client.request({
      query: doc,
      variables: vars,
      url,
    })

    return { data: data?.data, query: doc, variables: vars || {} }
  }

  return requester
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(
      createClient({
        url: "http://localhost:4001/graphql",
        queries,
      })
    )
  )

export const queries = (
  client: TinaClient,
  options?: {
    branch?: string
  }
) => {
  const requester = generateRequester(client, options)
  return getSdk(requester)
}

  